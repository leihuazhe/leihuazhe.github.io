[{"title":"springmvc 拦截器模板","date":"2017-08-27T06:36:51.000Z","path":"2017/08/27/springmvc-拦截器模板/","text":"关键点：’springmvc拦截器 ‘ 需求 我们用jquery ajax 请求 后台 用spring 拦截session 过期 1. 过期则跳转指定页面 怎么弄呀2.session的时候 ajax 有时候也会走error 方法 这个怎么写好呢 我们先了解一下一些必要的信息。ajax 请求和普通的 http 请求是不一样的，Ajax请求是XMLHTTPRequest对象发起的，而http请求是浏览器发起的。 二者不同地方体现在HTTP请求的头信息中。 AJAX请求头中带有X-Requested-With信息，其值为XMLHttpRequest。而普通请求是没有的。 在拦截器中进行配置： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123; Oper oper = (Oper)request.getSession().getAttribute(Const.SESSION_LOGIN_ADMIN_USER); String requestCTX = urlPathHelper.getContextPath(request); System.out.println(requestCTX); String requestUri = request.getRequestURI(); //请求完整路径，可用于登陆后跳转 String contextPath = request.getContextPath(); //项目下完整路径 String url = requestUri.substring(contextPath.length()); //请求页面 logger.debug(\"======拦截器配置成功======\"); logger.debug(\"======拦截来自：\"+requestUri+\"的请求=======\"); logger.debug(\"======拦截的页面路径是：==：\"+url+\"=======\"); //throw new Exception(\"登录超时!\"); if(oper == null)&#123;//如果获取不到登录的session //如果是ajax请求 if (request.getHeader(\"x-requested-with\") != null &amp;&amp; request.getHeader(\"x-requested-with\").equalsIgnoreCase(\"XMLHttpRequest\"))&#123; response.setHeader(\"sessionstatus\", \"timeout\"); // 响应头设置session状态 return false; //session超时，ajax访问返回false &#125; &#125; return super.preHandle(request, response, handler); &#125; 判断，如果session过期的话，进行上述设置 然后再前端页面主js文件中进行统一设置， 有了配置文件，也有了拦截器，在拦截器中已经设置了返回的信息，而这些信息会被 JavaScript 获取到。 $.ajaxSetup方法是来设置AJAX请求默认选项的， 我们可以认为是全局的选项设置，因此可以将这段代码提到外部js文件中，在需要的页面 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152$.ajaxSetup(&#123; type: 'POST', contentType:\"application/x-www-form-urlencoded;charset=utf-8\", complete: function(xhr,status) &#123; var sessionStatus = xhr.getResponseHeader('sessionstatus'); if(sessionStatus == 'timeout') &#123; //var top = getTopWinow(); //var yes = confirm('由于您长时间没有操作, session已过期, 请重新登录.'); //if (yes) &#123; alert(\"登录超时,请重新登录！\"); window.location.href = '/admin/login/out.do'; //&#125; &#125; &#125; &#125;); /** * 在页面中任何嵌套层次的窗口中获取顶层窗口 * @return 当前页面的顶层窗口对象 */ function getTopWinow()&#123; var p = window; while(p != p.parent)&#123; p = p.parent; &#125; return p; &#125; 本章完","tags":[]},{"title":"Hello World","date":"2017-08-27T05:04:21.468Z","path":"2017/08/27/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]